// Generated by delombok at Fri Aug 02 00:57:59 UTC 2024
package org.jqassistant.plugin.contextmapper.report;

import org.jqassistant.plugin.contextmapper.model.BoundedContextBaseDescriptor;
import org.jqassistant.plugin.contextmapper.model.BoundedContextDependencyDescriptor;
import java.util.List;

/**
 * Model class representing the content of a context map.
 *
 * @author Stephan Pirnbaum
 */
public class ContextMapperDiagram {
    private List<BoundedContextBaseDescriptor> boundedContexts;
    private List<BoundedContextDependencyDescriptor> relationships;

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    ContextMapperDiagram(final List<BoundedContextBaseDescriptor> boundedContexts, final List<BoundedContextDependencyDescriptor> relationships) {
        this.boundedContexts = boundedContexts;
        this.relationships = relationships;
    }


    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static class ContextMapperDiagramBuilder {
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private java.util.ArrayList<BoundedContextBaseDescriptor> boundedContexts;
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        private java.util.ArrayList<BoundedContextDependencyDescriptor> relationships;

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        ContextMapperDiagramBuilder() {
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder boundedContext(final BoundedContextBaseDescriptor boundedContext) {
            if (this.boundedContexts == null) this.boundedContexts = new java.util.ArrayList<BoundedContextBaseDescriptor>();
            this.boundedContexts.add(boundedContext);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder boundedContexts(final java.util.Collection<? extends BoundedContextBaseDescriptor> boundedContexts) {
            if (boundedContexts == null) {
                throw new java.lang.NullPointerException("boundedContexts cannot be null");
            }
            if (this.boundedContexts == null) this.boundedContexts = new java.util.ArrayList<BoundedContextBaseDescriptor>();
            this.boundedContexts.addAll(boundedContexts);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder clearBoundedContexts() {
            if (this.boundedContexts != null) this.boundedContexts.clear();
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder relationship(final BoundedContextDependencyDescriptor relationship) {
            if (this.relationships == null) this.relationships = new java.util.ArrayList<BoundedContextDependencyDescriptor>();
            this.relationships.add(relationship);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder relationships(final java.util.Collection<? extends BoundedContextDependencyDescriptor> relationships) {
            if (relationships == null) {
                throw new java.lang.NullPointerException("relationships cannot be null");
            }
            if (this.relationships == null) this.relationships = new java.util.ArrayList<BoundedContextDependencyDescriptor>();
            this.relationships.addAll(relationships);
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram.ContextMapperDiagramBuilder clearRelationships() {
            if (this.relationships != null) this.relationships.clear();
            return this;
        }

        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public ContextMapperDiagram build() {
            java.util.List<BoundedContextBaseDescriptor> boundedContexts;
            switch (this.boundedContexts == null ? 0 : this.boundedContexts.size()) {
            case 0: 
                boundedContexts = java.util.Collections.emptyList();
                break;
            case 1: 
                boundedContexts = java.util.Collections.singletonList(this.boundedContexts.get(0));
                break;
            default: 
                boundedContexts = java.util.Collections.unmodifiableList(new java.util.ArrayList<BoundedContextBaseDescriptor>(this.boundedContexts));
            }
            java.util.List<BoundedContextDependencyDescriptor> relationships;
            switch (this.relationships == null ? 0 : this.relationships.size()) {
            case 0: 
                relationships = java.util.Collections.emptyList();
                break;
            case 1: 
                relationships = java.util.Collections.singletonList(this.relationships.get(0));
                break;
            default: 
                relationships = java.util.Collections.unmodifiableList(new java.util.ArrayList<BoundedContextDependencyDescriptor>(this.relationships));
            }
            return new ContextMapperDiagram(boundedContexts, relationships);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        @lombok.Generated
        public java.lang.String toString() {
            return "ContextMapperDiagram.ContextMapperDiagramBuilder(boundedContexts=" + this.boundedContexts + ", relationships=" + this.relationships + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public static ContextMapperDiagram.ContextMapperDiagramBuilder builder() {
        return new ContextMapperDiagram.ContextMapperDiagramBuilder();
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<BoundedContextBaseDescriptor> getBoundedContexts() {
        return this.boundedContexts;
    }

    @java.lang.SuppressWarnings("all")
    @lombok.Generated
    public List<BoundedContextDependencyDescriptor> getRelationships() {
        return this.relationships;
    }
}
